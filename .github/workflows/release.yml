name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_release:
    name: Build for ${{ matrix.platform_id }}
    permissions:
      contents: write

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2022
            python-version: '3.8'
            platform_id: 'win-amd64'

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python with dependency caching
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx_Freeze
          pip install -r requirements.txt
        shell: bash

      - name: Get version from tag
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
        shell: bash

      - name: Build executable with cx_Freeze
        run: |
          export CI_VERSION=${{ env.VERSION }}
          python setup.py build
        shell: bash

      - name: Prepare artifact for release
        shell: bash
        run: |
          ARTIFACT_DIR="KeyWeaver-${{ env.VERSION }}-${{ matrix.platform_id }}"
          mkdir -p ${ARTIFACT_DIR}

          BUILD_DIR=$(find build -maxdepth 1 -type d -name "exe.*")
          mv ${BUILD_DIR}/* ./${ARTIFACT_DIR}/
          
          echo "ARTIFACT_DIR=${ARTIFACT_DIR}" >> $GITHUB_ENV

      - name: Create release archive
        shell: bash
        run: |
          7z a "${{ env.ARTIFACT_DIR }}.zip" "./${{ env.ARTIFACT_DIR }}"
          echo "ASSET_PATH=${{ env.ARTIFACT_DIR }}.zip" >> $GITHUB_ENV

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET_PATH }}
          generate_release_notes: true